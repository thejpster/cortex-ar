[package]
authors = [
    "Jonathan Pallant <jonathan.pallant@ferrous-systems.com>",
    "The Cortex-R Team <cortex-r@teams.rust-embedded.org>",
]
categories = [
    "embedded",
    "no-std",
]
description = "CPU support for AArch32 Arm Cortex-R and Arm Cortex-A"
edition = "2021"
keywords = [
    "arm",
    "cortex-a",
    "cortex-r",
    "embedded",
    "no-std",
]
license = "MIT OR Apache-2.0"
name = "cortex-ar"
readme = "README.md"
repository = "https://github.com/rust-embedded/cortex-ar.git"
homepage = "https://github.com/rust-embedded/cortex-ar.git"
rust-version = "1.82"
version = "0.1.0"

[dependencies]
arbitrary-int = "1.3.0"
bitbybit = "1.3.3"
num_enum = { version = "0.7", default-features = false }
critical-section = {version = "1.2.0", features = ["restore-state-u8"], optional = true}
defmt = {version = "0.3", optional = true}

[build-dependencies]
arm-targets = {version = "0.1.0", path = "../arm-targets"}

[features]
# Adds a critical-section implementation that only disables interrupts.
# This is not sound on multi-core systems because interrupts are per-core.
critical-section-single-core = ["critical-section"]
# Adds a critical-section implementation that disables interrupts and does
# a CAS spinlock.
critical-section-multi-core = ["critical-section"]
# Adds defmt::Format implementation for the register types
defmt = ["dep:defmt"]

[package.metadata.docs.rs]
targets = ["armv7r-none-eabihf", "armv7r-none-eabi", "armv7a-none-eabihf"]
